{"version":3,"sources":["assets/twitter_icon.png","assets/linkedin_icon.png","assets/github_icon.png","assets/email_icon.png","data/projects.js","Projects.js","data/socialProfiles.js","SocialProfiles.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PROJECTS","id","title","description","link","Project","_this$props$project","this","props","project","image","react_default","a","createElement","className","src","alt","href","Component","Projects","map","PROJECT","Projects_Project","key","SOCIALPROFILELIST","twitter","linkedin","github","email","SocialProfile","_this$props$profile","profile","App","state","displayBio","toggleDisplayBio","_this","setState","onClick","src_Projects","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1eec00c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twitter_icon.512536cb.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin_icon.56ab00e8.png\";","module.exports = __webpack_public_path__ + \"static/media/github_icon.e2a62886.png\";","module.exports = __webpack_public_path__ + \"static/media/email_icon.fd99f8e3.png\";","//import project1 from '../assets/project1.png';\n//import project2 from '../assets/project2.png';\n//import project3 from '../assets/project3.png';\n\nconst PROJECTS = [\n    {\n        id:1,\n        title:\"Example React Application\",\n        description:\"A React Applicaton that i build involing JS and core web dev concepts!\",\n        link:'https://github.com/irraghav/react',\n        //image: project1\n    },\n    {\n        id:2,\n        title:\"My API\",\n        description:\"A REST API that i build involing JS and core web dev concepts!\",\n        link:'https://github.com/irraghav/react',\n        //image: project2\n    },\n    {\n        id:3,\n        title:\"Operationg Systems Final Project\",\n        description:\"A final Project that i build involing JS and core web dev concepts!\",\n        link:'https://github.com/irraghav/react',\n        //image: project2\n    }\n];\n\nexport default PROJECTS;","import React, { Component } from 'react';\nimport PROJECTS from './data/projects';\n\nclass Project extends Component{\n    render(){\n        const {title, image, description, link } = this.props.project;\n        return(\n                <div className=\"project-container\">\n                   <h3>{title}</h3>\n                   <img src={image} alt={title} className=\"project-image\"></img>\n                   <p>{description}</p>\n                   <a href={link}>{link}</a>\n                </div>\n            );\n    }\n}\n\nclass Projects extends Component {\n    render(){\n        return(\n            <div>\n                <h2> Highlighted Projects </h2>\n                <div>\n                    {\n                        PROJECTS.map(PROJECT => {\n                            return(<Project key={PROJECT.id} project={PROJECT}/>)\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Projects;","import twitter from '../assets/twitter_icon.png';\nimport linkedin from '../assets/linkedin_icon.png';\nimport github from '../assets/github_icon.png';\nimport email from '../assets/email_icon.png';\n\n\nconst SOCIALPROFILELIST = [\n    {\n        id:1,\n        title:\"twitter profile - irraghav\",\n        alt:\"twitter icon\",\n        link:\"https://twitter.com/irraghav\",\n        image: twitter\n\n    },\n    {\n        id:2,\n        title:\"linkedin - irraghav\",\n        alt:\"linkedin icon\",\n        link:\"https://ca.linkedin.com/in/raghav-sharma-80633452\",\n        image: linkedin\n    },\n    {\n        id:3,\n        title:\"github - irraghavdev\",\n        alt:\"github icon\",\n        link:\"https://github.com/irraghav\",\n        image: github\n    },\n    {\n        id:4,\n        title:\"email - irraghavdev@gmail.com\",\n        alt:\"email icon\",\n        link:\"irraghavdev@gmail.com\",\n        image: email\n    }\n];\n\nexport default SOCIALPROFILELIST;","import React, { Component } from 'react';\nimport SOCIALPROFILELIST from './data/socialProfiles.js';\n\nclass SocialProfile extends Component{\n    render(){\n        //console.log(\"social.profile props\", this.props);\n        const {title,alt,link,image} = this.props.profile;\n        return(\n            <div className=\"social-profile-container\">\n                <a href={link} title={title}>\n                 <img src={image} alt={alt} className=\"social-profile-image\"/>           \n                </a>\n            </div>\n        )\n    }\n};\n\nclass SocialProfiles extends Component{\n    render(){\n        return(\n            <div className=\"social-profiles-wrapper\">\n                <div>{\n                    SOCIALPROFILELIST.map(PROFILE => {\n                        return(<SocialProfile key={PROFILE.id} profile={PROFILE}/>);\n                    })\n                }\n                </div>\n                <div>This site is created with React by Raghav Sharma</div>    \n            </div>\n        )\n    }\n}\n\nexport default SocialProfiles;\n","import React, { Component } from 'react';\nimport Projects from './Projects';\nimport SocialProfiles from './SocialProfiles';\nimport \"./styles/projects.css\"\n\nclass App extends Component {\n    state = {displayBio:false}\n/*    constructor(){\n        super();\n        this.state = { displayBio:false };\n        this.toggleDisplayBio = this.toggleDisplayBio.bind(this);\n    }\n*/\n    toggleDisplayBio = () => {\n        this.setState({displayBio: !this.state.displayBio})\n        }\n    \n    render(){\n        return (\n        <div>\n            <h1>Hello!</h1>\n            <p>My name is Raghav. I'm a Data - Developer.</p>\n            <p>What does that mean?</p>\n            <p>I am a developer who focused on data collection strategies</p>\n            {\n                this.state.displayBio ? (\n                    <div>    \n                        <p>I am always willing to learn something new. Last thing on the list: React.js</p>\n                        <p> I am from New Delhi, but Toronto is Home #6ix</p>\n                        <p> Data and Javascript is what i live by.</p>\n                        <p> Expect work, I love the fact that i am a Cat Dad!</p>\n                        <div><button onClick={this.toggleDisplayBio}>Show less</button></div>\n                    </div>\n                ): (\n                    <div>\n                        <button onClick={this.toggleDisplayBio}>Read More</button>\n                    </div>\n                )\n            }\n            <hr/>\n            <Projects/>\n        </div>\n        ); \n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}